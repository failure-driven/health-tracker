require:
  - rubocop-rails
  - rubocop-rspec
  - rubocop-performance
  - rubocop-rake

AllCops:
  NewCops: enable
  TargetRubyVersion: 3.0
  UseCache: true
  CacheRootDirectory: .
  MaxFilesInCache: 10000
  Exclude:
    - node_modules/**/*
    - vendor/**/*
    - bin/update
    - bin/rake
    - bin/setup
    - bin/yarn
    - bin/spring
    - bin/rails
    - bin/bundle
    - db/seeds.rb
    - db/schema.rb
    - db/migrate/*

# ===== START Customisations =====

RSpec/InstanceVariable:
  Description: allow features not to need lets
  Exclude:
    - "spec/features/**/*"

Metrics/BlockLength:
  Description: allow features to be more descriptive and longer
  Exclude:
    - "spec/features/**/*"
    - "spec/services/**/*"

RSpec/Capybara/FeatureMethods:
  Description: allow given/background/scenario in capybara features
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/FrozenStringLiteralComment:
  EnforcedStyle: never

Style/TrailingCommaInArrayLiteral:
  Description: This cop checks for trailing comma in array literals.
  EnforcedStyleForMultiline: consistent_comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: consistent_comma

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: consistent_comma

      # Layout/LineLength:
      #   Exclude:
      #     - config/**/*
      #     - features/support/env.rb
      #     - spec/**/*

# ====== END Customisations ======

RSpec/MultipleExpectations:
  Enabled: false

RSpec/ExampleLength:
  Enabled: false

Bundler/OrderedGems:
  Description: Gems should be alphabetically sorted within groups.
  Enabled: true

Layout/LineLength:
  Description: >
    This cop checks the length of lines in the source code. The maximum length
    is configurable. The tab size is configured in the IndentationWidth of the
    Layout/Tab cop.
  Enabled: True
  Max: 115

# NOTE: START of standard 1.1.1 config/base.yml
Bundler/DuplicatedGem:
  Description: A Gem's requirements should be listed only once in a Gemfile.
  Enabled: true
  Include:
    - "**/*.gemfile"
    - "**/Gemfile"
    - "**/gems.rb"

Bundler/InsecureProtocolSource:
  Enabled: true
  Include:
    - "**/*.gemfile"
    - "**/Gemfile"
    - "**/gems.rb"

Gemspec/DateAssignment:
  Enabled: true

Gemspec/DuplicatedAssignment:
  Enabled: true
  Include:
    - "**/*.gemspec"

Layout/AccessModifierIndentation:
  Enabled: true
  EnforcedStyle: indent
  IndentationWidth: ~

Layout/ArgumentAlignment:
  Enabled: true
  EnforcedStyle: with_fixed_indentation

Layout/ArrayAlignment:
  Description: Here we check if the elements of a multi-line array literal are aligned.
  Enabled: true
  EnforcedStyle: with_fixed_indentation

Layout/AssignmentIndentation:
  Enabled: true
  IndentationWidth: ~

Layout/BeginEndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: start_of_line
  AutoCorrect: true
  Severity: warning

Layout/BlockAlignment:
  Enabled: true
  EnforcedStyleAlignWith: either

Layout/BlockEndNewline:
  Enabled: true

Layout/CaseIndentation:
  Description: This cop checks how the whens of a case expression are indented in relation to its case or end keyword.
  # Disabled because IndentOneStep can't be configured for one-liner cases. See:
  # https://github.com/rubocop-hq/rubocop/issues/6447
  Enabled: false

Layout/ClosingHeredocIndentation:
  Enabled: true

Layout/ClosingParenthesisIndentation:
  Enabled: true

Layout/CommentIndentation:
  Enabled: true

Layout/ConditionPosition:
  Enabled: true

Layout/DefEndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: start_of_line
  AutoCorrect: true
  Severity: warning

Layout/DotPosition:
  Enabled: true
  EnforcedStyle: leading

Layout/ElseAlignment:
  Enabled: true

Layout/EmptyComment:
  Enabled: true
  AllowBorderComment: true
  AllowMarginComment: true

Layout/EmptyLineAfterMagicComment:
  Enabled: true

Layout/EmptyLineBetweenDefs:
  Description: This cop checks whether method definitions are separated by one empty line.
  Enabled: true
  AllowAdjacentOneLineDefs: false
  NumberOfEmptyLines: 1

Layout/EmptyLines:
  Description: This cop checks for two or more consecutive blank lines.
  Enabled: true

Layout/EmptyLinesAroundAccessModifier:
  Enabled: true

Layout/EmptyLinesAroundArguments:
  Enabled: true

Layout/EmptyLinesAroundBeginBody:
  Enabled: true

Layout/EmptyLinesAroundBlockBody:
  Enabled: true
  EnforcedStyle: no_empty_lines

Layout/EmptyLinesAroundClassBody:
  Enabled: true
  EnforcedStyle: no_empty_lines

Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Enabled: true

Layout/EmptyLinesAroundMethodBody:
  Enabled: true

Layout/EmptyLinesAroundModuleBody:
  Enabled: true
  EnforcedStyle: no_empty_lines

Layout/EndAlignment:
  Enabled: true
  AutoCorrect: true
  EnforcedStyleAlignWith: variable
  Severity: warning

Layout/EndOfLine:
  Enabled: true
  EnforcedStyle: native

Layout/ExtraSpacing:
  Description: This cop checks for extra/unnecessary whitespace.
  Enabled: true
  AllowForAlignment: false
  AllowBeforeTrailingComments: false
  ForceEqualSignAlignment: false

Layout/FirstArgumentIndentation:
  Enabled: true
  EnforcedStyle: consistent
  IndentationWidth: ~

Layout/FirstArrayElementIndentation:
  Enabled: true
  EnforcedStyle: consistent
  IndentationWidth: ~

Layout/FirstHashElementIndentation:
  Enabled: true
  EnforcedStyle: consistent
  IndentationWidth: ~

Layout/HashAlignment:
  Description: >
    Check that the keys, separators, and values of a multi-line hash literal
    are aligned according to configuration.
  Enabled: true
  EnforcedHashRocketStyle: key
  EnforcedColonStyle: key
  EnforcedLastArgumentHashStyle: always_inspect

Layout/HeredocIndentation:
  Enabled: true

Layout/IndentationConsistency:
  Enabled: true
  EnforcedStyle: normal

Layout/IndentationStyle:
  Enabled: true
  IndentationWidth: ~

Layout/IndentationWidth:
  Enabled: true
  Width: 2
  IgnoredPatterns: []

Layout/InitialIndentation:
  Enabled: true

Layout/LeadingCommentSpace:
  Enabled: true

Layout/LeadingEmptyLines:
  Enabled: true

Layout/MultilineArrayBraceLayout:
  Enabled: true
  EnforcedStyle: symmetrical

Layout/MultilineBlockLayout:
  Enabled: true

Layout/MultilineHashBraceLayout:
  Enabled: true
  EnforcedStyle: symmetrical

Layout/MultilineMethodCallBraceLayout:
  Enabled: true
  EnforcedStyle: symmetrical

Layout/MultilineMethodCallIndentation:
  Enabled: true
  EnforcedStyle: indented
  IndentationWidth: ~

Layout/MultilineMethodDefinitionBraceLayout:
  Enabled: true
  EnforcedStyle: symmetrical

Layout/MultilineOperationIndentation:
  Enabled: true
  EnforcedStyle: indented
  IndentationWidth: ~

Layout/ParameterAlignment:
  Description: Here we check if the parameters on a multi-line method call or definition are aligned.
  Enabled: true
  EnforcedStyle: with_fixed_indentation
  IndentationWidth: ~

Layout/RescueEnsureAlignment:
  Enabled: true

Layout/SpaceAfterColon:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAfterMethodName:
  Enabled: true

Layout/SpaceAfterNot:
  Enabled: true

Layout/SpaceAfterSemicolon:
  Enabled: true

Layout/SpaceAroundBlockParameters:
  Enabled: true
  EnforcedStyleInsidePipes: no_space

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true
  EnforcedStyle: space

Layout/SpaceAroundKeyword:
  Enabled: true

Layout/SpaceAroundMethodCallOperator:
  Enabled: true

Layout/SpaceAroundOperators:
  Enabled: true
  AllowForAlignment: true

Layout/SpaceBeforeBlockBraces:
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: space

Layout/SpaceBeforeComma:
  Enabled: true

Layout/SpaceBeforeComment:
  Enabled: true

Layout/SpaceBeforeFirstArg:
  Enabled: true
  AllowForAlignment: true

Layout/SpaceBeforeSemicolon:
  Enabled: true

Layout/SpaceInLambdaLiteral:
  Enabled: true
  EnforcedStyle: require_no_space

Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: true
  EnforcedStyle: no_space
  EnforcedStyleForEmptyBrackets: no_space

Layout/SpaceInsideArrayPercentLiteral:
  Enabled: true

Layout/SpaceInsideBlockBraces:
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true

Layout/SpaceInsideHashLiteralBraces:
  Enabled: true
  EnforcedStyle: no_space
  EnforcedStyleForEmptyBraces: no_space

Layout/SpaceInsideParens:
  Enabled: true
  EnforcedStyle: no_space

Layout/SpaceInsidePercentLiteralDelimiters:
  Enabled: true

Layout/SpaceInsideRangeLiteral:
  Enabled: true

Layout/SpaceInsideReferenceBrackets:
  Enabled: true
  EnforcedStyle: no_space
  EnforcedStyleForEmptyBrackets: no_space

Layout/SpaceInsideStringInterpolation:
  Enabled: true
  EnforcedStyle: no_space

Layout/TrailingEmptyLines:
  Enabled: true
  EnforcedStyle: final_newline

Layout/TrailingWhitespace:
  Enabled: true
  AllowInHeredoc: true

Lint/AmbiguousAssignment:
  Enabled: true

Lint/AmbiguousOperator:
  Enabled: true

Lint/AmbiguousRegexpLiteral:
  Enabled: true

Lint/AssignmentInCondition:
  Enabled: true
  AllowSafeAssignment: true

Lint/BigDecimalNew:
  Enabled: true

Lint/BinaryOperatorWithIdenticalOperands:
  Enabled: true

Lint/BooleanSymbol:
  Enabled: true

Lint/CircularArgumentReference:
  Enabled: true

Lint/ConstantDefinitionInBlock:
  Enabled: true

Lint/Debugger:
  Description: This cop checks for calls to debugger or pry.
  Enabled: true

Lint/DeprecatedClassMethods:
  Enabled: true

Lint/DeprecatedConstants:
  Enabled: true

Lint/DeprecatedOpenSSLConstant:
  Enabled: true

Lint/DuplicateCaseCondition:
  Description: This cop checks that there are no repeated conditions used in case 'when' expressions.
  Enabled: true

Lint/DuplicateElsifCondition:
  Enabled: true

Lint/DuplicateHashKey:
  Description: This cop checks for duplicated keys in hash literals.
  Enabled: true

Lint/DuplicateMethods:
  Description: This cop checks for duplicated instance (or singleton) method definitions.
  Enabled: true

Lint/DuplicateRegexpCharacterClassElement:
  Enabled: true

Lint/DuplicateRequire:
  Enabled: true

Lint/DuplicateRescueException:
  Enabled: true

Lint/EachWithObjectArgument:
  Enabled: true

Lint/ElseLayout:
  Enabled: true

Lint/EmptyEnsure:
  Enabled: true
  AutoCorrect: true

Lint/EmptyExpression:
  Enabled: true

Lint/EmptyInterpolation:
  Enabled: true

Lint/EmptyWhen:
  Enabled: true
  AllowComments: true

Lint/EnsureReturn:
  Enabled: true

Lint/ErbNewArguments:
  Enabled: true

Lint/FlipFlop:
  Enabled: true

Lint/FloatComparison:
  Enabled: true

Lint/FloatOutOfRange:
  Enabled: true

Lint/FormatParameterMismatch:
  Enabled: true

Lint/IdentityComparison:
  Enabled: true

Lint/ImplicitStringConcatenation:
  Enabled: true

Lint/IneffectiveAccessModifier:
  Enabled: true

Lint/InheritException:
  Enabled: true
  EnforcedStyle: runtime_error

Lint/InterpolationCheck:
  Enabled: true

Lint/LiteralAsCondition:
  Enabled: true

Lint/LiteralInInterpolation:
  Enabled: true

Lint/Loop:
  Enabled: true

Lint/MissingCopEnableDirective:
  Description: >
    This cop checks that there is an
    # rubocop:enable ... statement after a rubocop:disable ... statement.
    This will prevent leaving cop disables on wide ranges of code, that latter
    contributors to a file wouldn't be aware of.
  Enabled: true
  MaximumRangeSize: .inf

Lint/MixedRegexpCaptureTypes:
  Enabled: true

Lint/MultipleComparison:
  Enabled: true

Lint/NestedMethodDefinition:
  Enabled: true

Lint/NestedPercentLiteral:
  Enabled: true

Lint/NextWithoutAccumulator:
  Enabled: true

Lint/NonDeterministicRequireOrder:
  Enabled: true

Lint/NonLocalExitFromIterator:
  Enabled: true

Lint/NumberedParameterAssignment:
  Enabled: true

Lint/OrAssignmentToConstant:
  Enabled: true

Lint/OrderedMagicComments:
  Enabled: true

Lint/OutOfRangeRegexpRef:
  Enabled: true

Lint/ParenthesesAsGroupedExpression:
  Enabled: true

Lint/PercentSymbolArray:
  Enabled: true

Lint/RaiseException:
  Enabled: true

Lint/RandOne:
  Enabled: true

Lint/RedundantRequireStatement:
  Enabled: true

Lint/RedundantSplatExpansion:
  Enabled: true

Lint/RedundantStringCoercion:
  Enabled: true

Lint/RedundantWithIndex:
  Enabled: true

Lint/RedundantWithObject:
  Enabled: true

Lint/RegexpAsCondition:
  Enabled: true

Lint/RequireParentheses:
  Description: >
    This cop checks for expressions where there is a call to a predicate method
    with at least one argument, where no parentheses are used around the
    parameter list, and a boolean operator, && or ||, is used in the last
    argument.
  Enabled: true

Lint/RescueException:
  Enabled: true

Lint/RescueType:
  Enabled: true

Lint/ReturnInVoidContext:
  Enabled: true

Lint/SafeNavigationChain:
  Enabled: true
  AllowedMethods:
    - present?
    - blank?
    - presence
    - try
    - try!

Lint/SafeNavigationConsistency:
  Enabled: true
  AllowedMethods:
    - present?
    - blank?
    - presence
    - try
    - try!

Lint/SafeNavigationWithEmpty:
  Enabled: true

Lint/SelfAssignment:
  Enabled: true

Lint/ShadowedArgument:
  Enabled: true
  IgnoreImplicitReferences: false

Lint/ShadowedException:
  Enabled: true

Lint/SymbolConversion:
  Enabled: true

Lint/Syntax:
  Enabled: true

Lint/TopLevelReturnWithArgument:
  Enabled: true

Lint/TrailingCommaInAttributeDeclaration:
  Enabled: true

Lint/TripleQuotes:
  Enabled: true

Lint/UnderscorePrefixedVariableName:
  Enabled: true

Lint/UnifiedInteger:
  Enabled: true

Lint/UnreachableCode:
  Description: >
    This cop checks for unreachable code. The check are based on the presence
    of flow of control statement in non-final position in begin(implicit)
    blocks.
  Enabled: true

Lint/UriEscapeUnescape:
  Enabled: true

Lint/UriRegexp:
  Enabled: true

Lint/UselessAssignment:
  Description: >
    This cop checks for every useless assignment to local variable in every
    scope. The basic idea for this cop was from the warning of ruby -cw
  Enabled: true

Lint/UselessElseWithoutRescue:
  Enabled: true

Lint/UselessSetterCall:
  Enabled: true

Lint/UselessTimes:
  Enabled: true

Lint/Void:
  Enabled: true
  CheckForMethodsWithNoSideEffects: false

Migration/DepartmentName:
  Enabled: true

Naming/BinaryOperatorParameterName:
  Enabled: true

Naming/BlockParameterName:
  Enabled: true
  MinNameLength: 1
  AllowNamesEndingInNumbers: true
  AllowedNames: []
  ForbiddenNames: []

Naming/ClassAndModuleCamelCase:
  Enabled: true

Naming/ConstantName:
  Description: This cop checks whether constant names are written using SCREAMING_SNAKE_CASE.
  Enabled: true

Naming/HeredocDelimiterCase:
  Enabled: true
  EnforcedStyle: uppercase

Naming/VariableName:
  Enabled: true
  EnforcedStyle: snake_case

Performance/BigDecimalWithNumericArgument:
  Enabled: true

Performance/BindCall:
  Enabled: true

Performance/BlockGivenWithExplicitBlock:
  Enabled: true

Performance/Caller:
  Enabled: true

Performance/CollectionLiteralInLoop:
  Enabled: false

Performance/CompareWithBlock:
  Enabled: true

Performance/ConstantRegexp:
  Enabled: true

Performance/Count:
  Enabled: true

Performance/DeletePrefix:
  Enabled: true

Performance/DeleteSuffix:
  Enabled: true

Performance/Detect:
  Enabled: true

Performance/DoubleStartEndWith:
  Enabled: true
  IncludeActiveSupportAliases: false

Performance/EndWith:
  Enabled: true

Performance/FixedSize:
  Enabled: true

Performance/FlatMap:
  Enabled: true
  EnabledForFlattenWithoutParams: false

Performance/InefficientHashSearch:
  Enabled: true
  Safe: false

Performance/RangeInclude:
  Enabled: true
  Safe: false

Performance/RedundantMatch:
  Enabled: true

Performance/RedundantMerge:
  Enabled: true
  MaxKeyValuePairs: 2

Performance/RedundantSortBlock:
  Enabled: true

Performance/RedundantSplitRegexpArgument:
  Enabled: true

Performance/RedundantStringChars:
  Enabled: true

Performance/RegexpMatch:
  Enabled: true

Performance/ReverseEach:
  Enabled: true

Performance/ReverseFirst:
  Enabled: true

Performance/Size:
  Enabled: true

Performance/SortReverse:
  Enabled: true

Performance/Squeeze:
  Enabled: true

Performance/StartWith:
  Enabled: true

Performance/StringReplacement:
  Enabled: true

Performance/UnfreezeString:
  Enabled: true

Performance/UriDefaultParser:
  Enabled: true

Rails/BulkChangeTable:
  Enabled: false

Security/Eval:
  Enabled: true

Security/JSONLoad:
  Enabled: true
  AutoCorrect: false
  SafeAutoCorrect: false

Security/Open:
  Enabled: true
  Safe: false

Security/YAMLLoad:
  Enabled: true
  SafeAutoCorrect: false

# Standard/BlockSingleLineBraces:
#   Enabled: true

Style/Alias:
  Enabled: true
  EnforcedStyle: prefer_alias_method

Style/AndOr:
  Enabled: true

Style/ArgumentsForwarding:
  Enabled: true
  AllowOnlyRestArgument: true

Style/ArrayJoin:
  Enabled: true

Style/Attr:
  Enabled: true

Style/BarePercentLiterals:
  Enabled: true
  EnforcedStyle: bare_percent

Style/BeginBlock:
  Enabled: true

Style/BlockComments:
  Enabled: true

Style/CharacterLiteral:
  Enabled: true

Style/ClassCheck:
  Enabled: true
  EnforcedStyle: is_a?

Style/ClassEqualityComparison:
  Enabled: true

Style/ClassMethods:
  Enabled: true

Style/ColonMethodCall:
  Enabled: true

Style/ColonMethodDefinition:
  Enabled: true

Style/CommandLiteral:
  Enabled: true
  EnforcedStyle: mixed
  AllowInnerBackticks: false

Style/CommentedKeyword:
  Enabled: true

Style/ConditionalAssignment:
  Enabled: true
  EnforcedStyle: assign_to_condition
  SingleLineConditionsOnly: true
  IncludeTernaryExpressions: true

Style/DefWithParentheses:
  Enabled: true

Style/Dir:
  Enabled: true

Style/EachForSimpleLoop:
  Enabled: true

Style/EachWithObject:
  Enabled: true

Style/EmptyBlockParameter:
  Enabled: true

Style/EmptyCaseCondition:
  Enabled: true

Style/EmptyElse:
  Enabled: true
  EnforcedStyle: both

Style/EmptyLambdaParameter:
  Enabled: true

Style/EmptyLiteral:
  Enabled: true

Style/EmptyMethod:
  Description: >
    This cop checks for the formatting of empty method definitions. By default
    it enforces empty method definitions to go on a single line (compact
    style), but it can be configured to enforce the end to go on its own line
    (expanded style).
  Enabled: true
  EnforcedStyle: expanded

Style/Encoding:
  Enabled: true

Style/EndBlock:
  Enabled: true
  AutoCorrect: true

Style/EvalWithLocation:
  Enabled: true

Style/For:
  Enabled: true
  EnforcedStyle: each

Style/GlobalStdStream:
  Enabled: true

Style/GlobalVars:
  Enabled: true
  AllowedVariables: []

Style/HashConversion:
  Enabled: true

Style/HashExcept:
  Enabled: true

Style/HashSyntax:
  Enabled: true
  EnforcedStyle: ruby19_no_mixed_keys

Style/IdenticalConditionalBranches:
  Enabled: true

Style/IfInsideElse:
  Enabled: true

Style/IfUnlessModifierOfIfUnless:
  Enabled: true

Style/IfWithBooleanLiteralBranches:
  Enabled: true

Style/IfWithSemicolon:
  Enabled: true

Style/InfiniteLoop:
  Enabled: true

Style/KeywordParametersOrder:
  Enabled: true

Style/LambdaCall:
  Enabled: true
  EnforcedStyle: call

Style/LineEndConcatenation:
  Enabled: true
  SafeAutoCorrect: false

Style/MethodCallWithoutArgsParentheses:
  Enabled: true
  IgnoredMethods: []

Style/MissingRespondToMissing:
  Enabled: true

Style/MixinGrouping:
  Enabled: true
  EnforcedStyle: separated

Style/MixinUsage:
  Enabled: true

Style/MultilineIfModifier:
  Enabled: true

Style/MultilineIfThen:
  Enabled: true

Style/MultilineMemoization:
  Enabled: true
  EnforcedStyle: keyword

Style/MultilineWhenThen:
  Enabled: true

Style/NegatedIf:
  Enabled: true
  EnforcedStyle: postfix

Style/NegatedWhile:
  Enabled: true

Style/NestedModifier:
  Enabled: true

Style/NestedParenthesizedCalls:
  Enabled: true
  AllowedMethods:
    - be
    - be_a
    - be_an
    - be_between
    - be_falsey
    - be_kind_of
    - be_instance_of
    - be_truthy
    - be_within
    - eq
    - eql
    - end_with
    - include
    - match
    - raise_error
    - respond_to
    - start_with

Style/NestedTernaryOperator:
  Enabled: true

Style/NilComparison:
  Enabled: true
  EnforcedStyle: predicate

Style/NilLambda:
  Enabled: true

Style/NonNilCheck:
  Enabled: true
  IncludeSemanticChanges: false

Style/Not:
  Enabled: true

Style/NumericLiteralPrefix:
  Enabled: false
  EnforcedOctalStyle: zero_with_o

Style/OneLineConditional:
  Enabled: true

Style/OptionalArguments:
  Enabled: true

Style/OrAssignment:
  Enabled: true

Style/ParenthesesAroundCondition:
  Enabled: true
  AllowSafeAssignment: true
  AllowInMultilineConditions: false

Style/PercentLiteralDelimiters:
  Enabled: true
  PreferredDelimiters:
    default: ()
    "%i": "[]"
    "%I": "[]"
    "%r": "{}"
    "%w": "[]"
    "%W": "[]"

Style/Proc:
  Enabled: true

Style/RandomWithOffset:
  Enabled: true

Style/RedundantAssignment:
  Enabled: true

Style/RedundantBegin:
  Enabled: true

Style/RedundantCondition:
  Description: This cop checks for unnecessary conditional expressions.
  Enabled: true

Style/RedundantConditional:
  Enabled: true

Style/RedundantException:
  Enabled: true

Style/RedundantFetchBlock:
  Enabled: true

Style/RedundantFileExtensionInRequire:
  Enabled: true

Style/RedundantFreeze:
  Enabled: true

Style/RedundantInterpolation:
  Enabled: true

Style/RedundantParentheses:
  Enabled: true

Style/RedundantPercentQ:
  Enabled: true

Style/RedundantRegexpCharacterClass:
  Enabled: true

Style/RedundantRegexpEscape:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: false

Style/RedundantSelf:
  Enabled: true

Style/RedundantSort:
  Enabled: true

Style/RedundantSortBy:
  Enabled: true

Style/RescueModifier:
  Enabled: true

Style/RescueStandardError:
  Enabled: true
  EnforcedStyle: implicit

Style/SafeNavigation:
  Enabled: true
  ConvertCodeThatCanStartToReturnNil: false
  AllowedMethods:
    - present?
    - blank?
    - presence
    - try
    - try!

Style/Sample:
  Enabled: true

Style/SelfAssignment:
  Enabled: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: false

Style/SingleLineMethods:
  Enabled: true
  AllowIfMethodIsEmpty: false

Style/SlicingWithRange:
  Enabled: true

Style/StabbyLambdaParentheses:
  Enabled: true
  EnforcedStyle: require_parentheses

Style/StderrPuts:
  Enabled: true

Style/StringChars:
  Enabled: true

Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes
  ConsistentQuotesInMultiline: false

Style/StringLiteralsInInterpolation:
  Enabled: true
  EnforcedStyle: double_quotes

Style/Strip:
  Enabled: true

Style/SymbolLiteral:
  Enabled: true

Style/TernaryParentheses:
  Enabled: true
  EnforcedStyle: require_no_parentheses
  AllowSafeAssignment: true

Style/TrailingBodyOnClass:
  Enabled: true

Style/TrailingBodyOnMethodDefinition:
  Enabled: true

Style/TrailingBodyOnModule:
  Enabled: true

Style/TrailingCommaInBlockArgs:
  Enabled: true

Style/TrailingMethodEndStatement:
  Enabled: true

Style/TrivialAccessors:
  Enabled: true
  ExactNameMatch: true
  AllowPredicates: true
  AllowDSLWriters: false
  IgnoreClassMethods: false
  AllowedMethods:
    - to_ary
    - to_a
    - to_c
    - to_enum
    - to_h
    - to_hash
    - to_i
    - to_int
    - to_io
    - to_open
    - to_path
    - to_proc
    - to_r
    - to_regexp
    - to_str
    - to_s
    - to_sym

Style/UnlessElse:
  Enabled: true

Style/UnpackFirst:
  Enabled: true

Style/VariableInterpolation:
  Enabled: true

Style/WhenThen:
  Enabled: true

Style/WhileUntilDo:
  Enabled: true

Style/YodaCondition:
  Enabled: true
  EnforcedStyle: forbid_for_all_comparison_operators
# NOTE: END of standard 1.1.1 config/base.yml

Lint/RedundantCopDisableDirective:
  Description: >
    This cop detects instances of rubocop:disable comments that can be removed
    without causing any offenses to be reported. It's implemented as a cop in
    that it inherits from the Cop base class and calls add_offense. The unusual
    part of its implementation is that it doesn't have any on_* methods or an
    investigate method. This means that it doesn't take part in the
    investigation phase when the other cops do their work. Instead, it waits
    until it's called in a later stage of the execution. The reason it can't be
    implemented as a normal cop is that it depends on the results of all other
    cops to do its work.
  Enabled: true

Lint/RedundantCopEnableDirective:
  Description: This cop detects instances of rubocop:enable comments that can be removed.
  Enabled: true

Lint/UnusedMethodArgument:
  Description: This cop checks for unused method arguments.
  Enabled: true

Metrics/AbcSize:
  Description: >
    This cop checks that the ABC size of methods is not higher than the
    configured maximum. The ABC size is based on assignments, branches (method
    calls), and conditions. See http://c2.com/cgi/wiki?AbcMetric and
    en.wikipedia.org/wiki/ABC_Software_Metric.
  Enabled: true
  Max: 25

Naming/AccessorMethodName:
  Description: This cop makes sure that accessor methods are named properly.
  Enabled: true

Naming/PredicateName:
  Description: This cop makes sure that predicates are named properly.
  Enabled: true

Style/NumericPredicate:
  Description: >
    This cop checks for usage of comparison operators (==, >, <) to test
    numbers as zero, positive, or negative. These can be replaced by their
    respective predicate methods. The cop can also be configured to do the
    reverse.
  Enabled: true
